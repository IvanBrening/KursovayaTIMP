#ifndef CONNECTTOBASE_H
#define CONNECTTOBASE_H

#include <string>

/**
 * @file ConnectToBase.h
 * @brief Содержит объявление класса ConnectToBase.
 * @author Бренинг Иван
 * @date 13.12.24
 * @version 1.0
 */

/**
 * @brief Класс ConnectToBase отвечает за взаимодействие с базой данных пользователей.
 *
 * Класс предоставляет методы для аутентификации пользователей, хеширования паролей и сравнения хешей.
 */
class ConnectToBase {
public:
    /**
     * @brief Аутентифицирует пользователя по логину, соли, хешу и файлу базы данных.
     *
     * Функция считывает данные пользователей из файла базы данных, который должен быть в формате:
     * `<логин> <пароль>\n`
     * Для каждой записи в файле:
     * 1. Сравнивает логин из файла с предоставленным логином.
     * 2. Если логины совпадают, вычисляет хеш пароля из файла с использованием предоставленной соли.
     * 3. Сравнивает вычисленный хеш с предоставленным хешем.
     * 4. Если хеши совпадают, аутентификация считается успешной.
     *
     * @param login Логин пользователя.
     * @param salt Соль, используемая при хешировании пароля.
     * @param clientHash Хеш пароля пользователя, полученный от клиента.
     * @param dbFileName Имя файла базы данных пользователей.
     * @return `true`, если аутентификация прошла успешно, `false` в противном случае.
     *
     * @note Функция не обрабатывает ошибки чтения из файла.
     * @note Функция использует `hashPassword` для вычисления хеша пароля и `compareHashes` для сравнения хешей.
     * @note Функция предполагает, что файл базы данных существует и доступен для чтения.
     * @note Функция завершает работу после нахождения первой совпадающей записи.
     */
    bool authenticateUser(const std::string& login, const std::string& salt, const std::string& clientHash, const std::string& dbFileName);

private:
    /**
     * @brief Вычисляет хеш пароля с использованием соли.
     *
     * Функция использует алгоритм SHA1 для вычисления хеша.
     *
     * @param password Пароль пользователя.
     * @param salt Соль.
     * @return Строка с хешем пароля в шестнадцатеричном формате (40 символов).
     *
     * @note Функция использует функции `SHA1` из библиотеки OpenSSL.
     */
    std::string hashPassword(const std::string& password, const std::string& salt);

    /**
     * @brief Сравнивает два хеша на равенство.
     *
     * Функция приводит обе строки к нижнему регистру перед сравнением.
     *
     * @param serverHash Хеш, вычисленный на сервере.
     * @param clientHash Хеш, полученный от клиента.
     * @return `true`, если хеши совпадают, `false` в противном случае.
     *
     * @note Функция использует `std::transform` для приведения строк к нижнему регистру.
     */
    bool compareHashes(const std::string& serverHash, const std::string& clientHash);
};

#endif
